What is Docker image?
--------------------------
RFS + UFS + APPFS
------------------------

  871  ls
  872  docker images
  873  docker rmi rabbitmq httpd tomcat  postgres  python  nginx ubuntu centos
  874  clear
  875  ls
  876  docker images
  877  docker info
  878  clear
  879  cd /var/lib/docker
  880  ls
  881  docker info
  882  clear
  883  ls
  884  du -sh overlay2/
  885  docker pull ubuntu
  886  clear
  887  ls
  888  cd overlay2/
  889  ls
  890  docker inspect ubuntu
  891  clear
  892  ls
  893  docker history ubuntu
  894  pwd
  895  docker images
  896  docker rmi ubuntu
  897  clear
  898  ls
  899  ls
  900  du -sh
  901  docker pull httpd
  902  ls
  903  du -h --max-depth=1
  904  clear
  905  cd ./2112232558f76d8e2077ed4d9675e789095155c76454a1c4eaf9fd9f7e1b90f3
  906  ls
  907  ls
  908  cd diff/
  909  ls
  910  cd ..
  911  ls
  912  cd ..
  913  ls
  914  clear
  915  du -h --max-depth=1
  916  cd ./3f1abfe2493fe925145421f832d01007fc24464c9bc31e983410b3a8f592c77e
  917  ls
  918  cd diff/
  919  ls
  920  docker ps -a
  921  docker ps -a
  922  docker stop e828064f58d9
  923  docker rm e828064f58d9
  924  clear
  925  ls
  926  docker ps -a
  927  ls
  928  cd ..
  929  ls
  930  cd ..
  931  ls
  932  clear
  933  ls
  934  docker run -d httpd
  935  ls
  936  ls 4b986cb6dd6a377b597d86c3fd679e6ce54561d73c05530b9f934ec70dc6b4cc
  937  du -sh 4b986cb6dd6a377b597d86c3fd679e6ce54561d73c05530b9f934ec70dc6b4cc
  938  du -sh 4b986cb6dd6a377b597d86c3fd679e6ce54561d73c05530b9f934ec70dc6b4cc-init
  939  du -sh 4b986cb6dd6a377b597d86c3fd679e6ce54561d73c05530b9f934ec70dc6b4cc
  940  ls 4b986cb6dd6a377b597d86c3fd679e6ce54561d73c05530b9f934ec70dc6b4cc
  941  docker ps
  942  docker stop b3f47c6b5236
  943  ls 4b986cb6dd6a377b597d86c3fd679e6ce54561d73c05530b9f934ec70dc6b4cc
  944  ls 4b986cb6dd6a377b597d86c3fd679e6ce54561d73c05530b9f934ec70dc6b4cc/diff/
  945  ls 4b986cb6dd6a377b597d86c3fd679e6ce54561d73c05530b9f934ec70dc6b4cc/diff/usr/
  946  ls 4b986cb6dd6a377b597d86c3fd679e6ce54561d73c05530b9f934ec70dc6b4cc/diff/usr/local/
  947  du -sh 4b986cb6dd6a377b597d86c3fd679e6ce54561d73c05530b9f934ec70dc6b4cc/diff/usr/local
  948  cleaatr
  949  clear
  950  ls
  951  docker start b3f47c6b5236
  952  docker exec -it b3f47c6b5236 /bin/bash
  953  find . -name ramukaka.txt
  954  df -kh
  955  docker stop b3f47c6b5236
  956  find . -name ramukaka.txt
  957  docker start b3f47c6b5236
  958  find . -name ramukaka.txt
  959  history
========================================================
Base - Ubuntu
---------git - apache - mysql - mongodb
=====================================
 2 Method
===========================
Method - 1 - Manual -- 1 Layer every time 
- Existing container

  962  docker kill $(docker ps -q)
  963  docker rm -f $(docker ps -a -q)
  964  clear
  965  docker
  966  clear
  967  docker run -itd ubuntu
  968  docker ps
  969  docker attach 108b27be953b
  970  git
  971  docker attach 108b27be953b
  972  ls
  973  cd
  974  clear
  975  ls
  976  vi index.html
  977  ls
  978  docker ps
  979  history
  980  clear
  981  ls
  982  docker ps
  983  docker cp index.html 108b27be953b:/tmp
  984  docker attach 108b27be953b
  985  clear
  986  docker ps
  987  docker exec 108b27be953b git
  988  clear
  989  docker exec 108b27be953b which apache2
  990  docker exec 108b27be953b mysql
  991  docker exec 108b27be953b mongo
  992  clear
  993  docker ps
  994  docker images
  995  docker commit -m"ub-up-git-mysql-mog" -a"Rajesh Kumar" 108b27be953b ub-up-git-mysql-mog
  996  docker images
  997  docker history ubuntu
  998  docker history ub-up-git-mysql-mog
  999  clear
 1000  docker images
 1001  docker run -itd --name=ramu1 ub-up-git-mysql-mog
 1002  docker exec ramu1 git
 1003  clear
 1004  docker attach ramu1
-------------------------------
How to share an images?
-----------------------
- tar ball

 1015  docker ps -a
 1016  docker stop 3e7211e5d9f1
 1017  docker rm 3e7211e5d9f1
 1018  clear
 1019  docker images
 1020  docker rmi ub-up-git-mysql-mog
 1021  clear
 1022  docker images
 1023  ls
 1024  docker loan -i ub-up-git-mysql-mog.tar
 1025  clear
 1026  docker load -i ub-up-git-mysql-mog.tar
 1027  history



- hub.docker.com
- Step 1 - Register at hub.docker.com
- Step 2 - Login
- Step 3 - Create a repo at hub
- Step 4 - MAKE sure a LR name MUST match with HUB repo name
$ docker tag raju3 devopsschools/23-nov-202
---------
useradd <raj>
usermod -aG wheel raj
su <raj>
---------
- Step 5 - docker login
- Step 6 - docker push devopsschools/23-nov-202





Method - 2 - Automated -- All Layer @ one go
- Dockerfile
===============================================
Rules of Dockerfile
- DATA layer - /var/lib/docker/overlay2 -- e.g somefiles
- Meta Layer - /var/lib/docker/image   -- env, runtime, network

- EACH LINE is Creating ONE LAYER
- Layer is created from a container from the previous line's layer.

--------------
FROM ubuntu
MAINTAINER Rajesh kumar < rajesh@devopsschool.com>
RUN apt-get update && apt-get install git -y
RUN apt-get install apache2 -y
RUN apt-get install mysql-server -y
RUN apt-get install mongodb -y
COPY index.html /tmp
ENV JAVA_HOME=/tmp/java


FROM	- Base Image
RUN	- Run a command in container
ADD	- COPy and EXTRACT
COPY	- COPY
EXTRACT - EXTRACT
EXPOSE 	- SET INFORAMTIONAL PORT
USER	- user to run container
VOLUME
WORKDIR	- user default user home
ENV	- set a cont env
ARG	- set arg for dockerfile 

[root@ip-172-31-5-96 rajesh]# history | grep build
 1102  docker build -t rajesh .
 1105  docker build -t rajesh .
 1108  docker build -t rajesh .

$ docker build -t rajesh .

$ docker build -f filename -t rajesh .

-----------------------------------------
CMD
ENRTYPOINT
==================================

How to set PID1?
-----------------------
CMD
ENRTYPOINT
-----------------------------------
- CMD can be replaced
- ENTRYPOINT CAN NOT BE replaced

============================
2 CMD
2 ENTRYPOINT
1 CMD 1 ENTRYPOINT
https://devopsschool.com/tutorial/docker/dockerfile/dockerfile-example-sample-lab.html

Mode of Execution
---------------------------
Exec mode [[[ /bin/ls	/bin/python
shell  [[[ ls python




Dcoker volume

https://docs.docker.com/develop/develop-images/multistage-build/


dcoekr run -d -p 8080:8080 -p 55000:50000 jenkins

========================================================
Docker Volume
---------------------------------------
https://www.devopsschool.com/blog/understand-docker-volume-from-beginner-to-deep-dive-level/

How to have data pers in container
-- Docker volume

Types 
- volume	/var/lib/docker/volumes
- mountfs	any place in host server
- tempfs	memory


 1162  ca /var/lib/docker/
 1163  cd /var/lib/docker/volumes/
 1164  pwd
 1165  clear
 1166  cd
 1167  ls
 1168  cd -
 1169  clear
 1170  ls
 1171  docker volume
 1172  docker volume  ls
 1173  pwd
 1174  ls
 1175  clear
 1176  ls
 1177  docker volume ls
 1178  docker volume
 1179  docker volume prune
 1180  clear
 1181  ls
 1182  du -sh
 1183  docker volume
 1184  docker volume create
 1185  ls
 1186  docker volume create dev
 1187  docker volume create qa
 1188  clear
 1189  ls
 1190  docker volume inspect dev
 1191  docker volume rm dev
 1192  clear
 1193  ls
 1194  docker run -itd --name=raju5 -v qa:/opt/ramukaka ubuntu
 1195  docker exec raju5 df -kh
 1196  docker exec raju5 touch /opt/ramukaka/rajesh1.txt
 1197  ls qa/_data/
 1198  docker exec raju5 touch /opt/ramukaka/rajesh2.txt
 1199  ls qa/_data/
 1200  touch qa/_data/rajesh3.txt
 1201  docker exec raju5 touch ls /opt/ramukaka
 1202  docker exec raju5 ls /opt/ramukaka
 1203  docker volume create dev
 1204  docker run -itd --name=raju5 -v qa:/opt/ramukaka -v dev:/tmp/dd ubuntu
 1205  clear
 1206  docker run -itd --name=raju6 -v qa:/opt/ramukaka -v dev:/tmp/dd ubuntu
 1207  docker exec raju6 ls /
 1208  docker exec raju6 ls /tmp
 1209  docker exec raju6 ls /opt
 1210  docker exec raju6 ls /opt/ramukaka
 1211  docker stop raju5 raju6
 1212  docker rm raju5 raju6
 1213  ls
 1214  clear
 1215  ls
 1216  ls dev/_data/
 1217  ls qa/_data/




 1226  pwd
 1227  docke run -itd --name=raju7 -v /opt/bkp:/opt/ramu ubuntu
 1228  docker run -itd --name=raju7 -v /opt/bkp:/opt/ramu ubuntu
 1229  docker exec raju7 ls /
 1230  docker exec raju7 ls /opt
 1231  docker exec raju7 touch /opt/ramu/rrrrr
 1232  ls
 1233  touch dsfsdf
 1234  docker exec raju7 ls /opt
 1235  docker exec raju7 ls /opt/rau
 1236  docker exec raju7 ls /opt/ra,mu
 1237  docker exec raju7 ls /opt/ramu



[root@ip-172-31-5-96 bkp]# docker help run

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Run a command in a new container

Options:
      --add-host list                  Add a custom host-to-IP mapping (host:ip)
  -a, --attach list                    Attach to STDIN, STDOUT or STDERR
      --blkio-weight uint16            Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)
      --blkio-weight-device list       Block IO weight (relative device weight) (default [])
      --cap-add list                   Add Linux capabilities
      --cap-drop list                  Drop Linux capabilities
      --cgroup-parent string           Optional parent cgroup for the container
      --cgroupns string                Cgroup namespace to use (host|private)
                                       'host':    Run the container in the Docker host's cgroup namespace
                                       'private': Run the container in its own private cgroup namespace
                                       '':        Use the cgroup namespace as configured by the
                                                  default-cgroupns-mode option on the daemon (default)
      --cidfile string                 Write the container ID to the file
      --cpu-period int                 Limit CPU CFS (Completely Fair Scheduler) period
      --cpu-quota int                  Limit CPU CFS (Completely Fair Scheduler) quota
      --cpu-rt-period int              Limit CPU real-time period in microseconds
      --cpu-rt-runtime int             Limit CPU real-time runtime in microseconds
  -c, --cpu-shares int                 CPU shares (relative weight)
      --cpus decimal                   Number of CPUs
      --cpuset-cpus string             CPUs in which to allow execution (0-3, 0,1)
      --cpuset-mems string             MEMs in which to allow execution (0-3, 0,1)
  -d, --detach                         Run container in background and print container ID
      --detach-keys string             Override the key sequence for detaching a container
      --device list                    Add a host device to the container
      --device-cgroup-rule list        Add a rule to the cgroup allowed devices list
      --device-read-bps list           Limit read rate (bytes per second) from a device (default [])
      --device-read-iops list          Limit read rate (IO per second) from a device (default [])
      --device-write-bps list          Limit write rate (bytes per second) to a device (default [])
      --device-write-iops list         Limit write rate (IO per second) to a device (default [])
      --disable-content-trust          Skip image verification (default true)
      --dns list                       Set custom DNS servers
      --dns-option list                Set DNS options
      --dns-search list                Set custom DNS search domains
      --domainname string              Container NIS domain name
      --entrypoint string              Overwrite the default ENTRYPOINT of the image
  -e, --env list                       Set environment variables
      --env-file list                  Read in a file of environment variables
      --expose list                    Expose a port or a range of ports
      --gpus gpu-request               GPU devices to add to the container ('all' to pass all GPUs)
      --group-add list                 Add additional groups to join
      --health-cmd string              Command to run to check health
      --health-interval duration       Time between running the check (ms|s|m|h) (default 0s)
      --health-retries int             Consecutive failures needed to report unhealthy
      --health-start-period duration   Start period for the container to initialize before starting health-retries
                                       countdown (ms|s|m|h) (default 0s)
      --health-timeout duration        Maximum time to allow one check to run (ms|s|m|h) (default 0s)
      --help                           Print usage
  -h, --hostname string                Container host name
      --init                           Run an init inside the container that forwards signals and reaps processes
  -i, --interactive                    Keep STDIN open even if not attached
      --ip string                      IPv4 address (e.g., 172.30.100.104)
      --ip6 string                     IPv6 address (e.g., 2001:db8::33)
      --ipc string                     IPC mode to use
      --isolation string               Container isolation technology
      --kernel-memory bytes            Kernel memory limit
  -l, --label list                     Set meta data on a container
      --label-file list                Read in a line delimited file of labels
      --link list                      Add link to another container
      --link-local-ip list             Container IPv4/IPv6 link-local addresses
      --log-driver string              Logging driver for the container
      --log-opt list                   Log driver options
      --mac-address string             Container MAC address (e.g., 92:d0:c6:0a:29:33)
  -m, --memory bytes                   Memory limit
      --memory-reservation bytes       Memory soft limit
      --memory-swap bytes              Swap limit equal to memory plus swap: '-1' to enable unlimited swap
      --memory-swappiness int          Tune container memory swappiness (0 to 100) (default -1)
      --mount mount                    Attach a filesystem mount to the container
      --name string                    Assign a name to the container
      --network network                Connect a container to a network
      --network-alias list             Add network-scoped alias for the container
      --no-healthcheck                 Disable any container-specified HEALTHCHECK
      --oom-kill-disable               Disable OOM Killer
      --oom-score-adj int              Tune host's OOM preferences (-1000 to 1000)
      --pid string                     PID namespace to use
      --pids-limit int                 Tune container pids limit (set -1 for unlimited)
      --platform string                Set platform if server is multi-platform capable
      --privileged                     Give extended privileges to this container
  -p, --publish list                   Publish a container's port(s) to the host
  -P, --publish-all                    Publish all exposed ports to random ports
      --pull string                    Pull image before running ("always"|"missing"|"never") (default "missing")
      --read-only                      Mount the container's root filesystem as read only
      --restart string                 Restart policy to apply when a container exits (default "no")
      --rm                             Automatically remove the container when it exits
      --runtime string                 Runtime to use for this container
      --security-opt list              Security Options
      --shm-size bytes                 Size of /dev/shm
      --sig-proxy                      Proxy received signals to the process (default true)
      --stop-signal string             Signal to stop a container (default "SIGTERM")
      --stop-timeout int               Timeout (in seconds) to stop a container
      --storage-opt list               Storage driver options for the container
      --sysctl map                     Sysctl options (default map[])
      --tmpfs list                     Mount a tmpfs directory
  -t, --tty                            Allocate a pseudo-TTY
      --ulimit ulimit                  Ulimit options (default [])
  -u, --user string                    Username or UID (format: <name|uid>[:<group|gid>])
      --userns string                  User namespace to use
      --uts string                     UTS namespace to use
  -v, --volume list                    Bind mount a volume
      --volume-driver string           Optional volume driver for the container
      --volumes-from list              Mount volumes from the specified container(s)
  -w, --workdir string                 Working directory inside the container
[root@ip-172-31-5-96 bkp]#

1240  docker help run
 1241  clear
 1242  docker ps
 1243  docker logs d93c4b44c7d5
 1244  docker attach d93c4b44c7d5
 1245  c
 1246  clear
 1247  docker logs d93c4b44c7d5
 1248  docker run -d httpd
 1249  docker ps
 1250  docker inspect dd8ef2c74b22
 1251  curl http://172.17.0.4
 1252  curl http://172.17.0.4
 1253  curl http://172.17.0.4
 1254  curl http://172.17.0.4
 1255  clear
 1256  docker ps
 1257  docker logs dd8ef2c74b22
 1258  clear
 1259  docker stats
 1260  docker stats raju7
 1261  docker ps
 1262  ps -eaf | grep dockerd
 1263  ckear
 1264  c,ear
 1265  clear
 1266  ps -eaf | grep containerd
 1267  docker top raju7
 1268  clear
 1269  docker events

docker pull http://
-----------------------

Docker config ==art






